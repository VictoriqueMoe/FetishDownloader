{"version":3,"sources":["webpack://Fetish/webpack/universalModuleDefinition","webpack://Fetish/webpack/bootstrap","webpack://Fetish/./src/FetishImage.ts","webpack://Fetish/./src/Main.ts","webpack://Fetish/./src/Parser.ts","webpack://Fetish/./src/Utils.ts","webpack://Fetish/external \"JSZip\"","webpack://Fetish/external \"file-saver\""],"names":[],"mappings":"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","file":"fetishDownloader.user.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"JSZip\"), require(\"file-saver\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"JSZip\", \"file-saver\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fetish\"] = factory(require(\"JSZip\"), require(\"file-saver\"));\n\telse\n\t\troot[\"Fetish\"] = factory(root[\"JSZip\"], root[\"file-saver\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_JSZip__, __WEBPACK_EXTERNAL_MODULE_file_saver__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/Main.ts\");\n","import {ImageContainerTyping} from \"Typings\";\r\nimport {AjaxUtils} from \"Utils\";\r\n\r\nexport class FetishImage {\r\n    private readonly _res: string;\r\n    private readonly _url: string;\r\n    private readonly _title: string;\r\n    private _isInit: boolean;\r\n    private _actualImage: Blob;\r\n\r\n    constructor(container: ImageContainerTyping) {\r\n        this._res = container.res;\r\n        this._title = container.title;\r\n        this._url = container.url;\r\n        this._isInit = false;\r\n    }\r\n\r\n    public get res(): string {\r\n        return this._res;\r\n    }\r\n\r\n    public get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n\r\n    public get title(): string {\r\n        return this._title;\r\n    }\r\n\r\n    public get isInit(): boolean {\r\n        return this._isInit;\r\n    }\r\n\r\n    public get image(): Blob {\r\n        if (!this._isInit) {\r\n            throw new Error(\"Image has not been loaded yet\");\r\n        }\r\n        return this._actualImage;\r\n    }\r\n\r\n    public unloadImage():void{\r\n        this._isInit = false;\r\n        this._actualImage = null;\r\n    }\r\n\r\n    public loadImage(): Promise<void> {\r\n        if (this._isInit) {\r\n            return Promise.resolve();\r\n        }\r\n        return AjaxUtils.loadXHR(this.url).then(image => {\r\n            this._actualImage = image;\r\n            this._isInit = true;\r\n        });\r\n    }\r\n}","import {FetishImage} from \"FetishImage\";\r\nimport {Parser} from \"Parser\";\r\nimport {AjaxUtils, MathUtil, QueryString} from \"Utils\";\r\nimport * as JSZip from \"JSZip\";\r\n\r\nexport class Main {\r\n    private static _isInit: boolean = false;\r\n    private static _images: FetishImage[] = [];\r\n\r\n    private constructor() {\r\n        throw new TypeError();\r\n    }\r\n\r\n    private static doDownload(files: FetishImage[], title?: string): Promise<void> {\r\n        Main.setLabel(\"compressing\");\r\n        let zip: JSZip = new JSZip();\r\n        for (let img of files) {\r\n            zip.file(img.title, img.image);\r\n        }\r\n        return zip.generateAsync({type: \"blob\"}).then(function (blob: Blob): void {\r\n            if (!title) {\r\n                title = QueryString.tags;\r\n            } else {\r\n                title = `${QueryString.tags} (${title})`;\r\n            }\r\n            saveAs(blob, title + \".zip\");\r\n            Main.setLabel();\r\n        });\r\n    }\r\n\r\n    private static setLabel(str: string = \"Download all your fetishes\"): void {\r\n        document.getElementById(\"fetishAnchor\").innerText = str;\r\n    }\r\n\r\n    public static init(): void {\r\n        if (Main._isInit) {\r\n            return;\r\n        }\r\n        buildUI();\r\n\r\n        function buildUI(): void {\r\n            function buildAnchor(): void {\r\n                let ulSideBar: HTMLUListElement = document.getElementById(\"subnavbar\") as HTMLUListElement;\r\n                let node: HTMLLIElement = document.createElement(\"LI\") as HTMLLIElement;\r\n                let textnode: Text = document.createTextNode(\"\");\r\n                let aTag: HTMLAnchorElement = document.createElement(\"a\");\r\n                aTag.id = \"fetishAnchor\";\r\n                aTag.appendChild(textnode);\r\n                aTag.href = \"#\";\r\n                node.appendChild(aTag);\r\n                ulSideBar.appendChild(node);\r\n            }\r\n\r\n            buildAnchor();\r\n            Main.setLabel();\r\n            let idDownloading: boolean = false;\r\n            document.getElementById(\"fetishAnchor\").addEventListener(\"click\", async e => {\r\n                if (idDownloading) {\r\n                    return;\r\n                }\r\n                if (Main._isInit) {\r\n                    Main.doDownload(Main._images);\r\n                } else {\r\n                    idDownloading = true;\r\n                    Main.setLabel(\"Parsing pages... Please wait\");\r\n                    Main._images = Main._images.concat(Parser.parse(document.getElementById(\"post-list-posts\") as HTMLUListElement));\r\n                    let allPages: NodeListOf<HTMLAnchorElement> = document.querySelectorAll(\"#paginator a:not(.next_page)\");\r\n                    let arrOfPageA: HTMLAnchorElement[] = Array.from(allPages);\r\n\r\n                    let firstPage: HTMLAnchorElement = arrOfPageA[0];\r\n                    let lastPage: HTMLAnchorElement = arrOfPageA[arrOfPageA.length - 1];\r\n                    let firstPageNumber: number = Number.parseInt(firstPage.text);\r\n                    let lastPageNumber: number = Number.parseInt(lastPage.text);\r\n                    let rangeBetween: Array<number> = MathUtil.range(firstPageNumber, lastPageNumber);\r\n                    let baseUrl: string = window.location.href;\r\n                    let urls: Array<string> = [];\r\n                    let currentPage: string = QueryString.page === undefined ? 1 : QueryString.page;\r\n                    for (let i: number = 0; i < rangeBetween.length; i++) {\r\n                        let num: string = String(rangeBetween[i]);\r\n                        if (num == currentPage) {\r\n                            continue;\r\n                        }\r\n                        let newUrl: string = AjaxUtils.addParameter(baseUrl, \"page\", num.toString(), true);\r\n                        urls.push(newUrl);\r\n                    }\r\n\r\n                    async function delay(ms: number): Promise<void> {\r\n                        return new Promise((resolve) => {\r\n                            setTimeout(resolve, ms);\r\n                        });\r\n                    }\r\n\r\n                    let count: number = 0;\r\n                    let failedPages: string[] = [];\r\n                    for (let url of urls) {\r\n                        count++;\r\n                        try {\r\n                            const response: Response = await fetch(url);\r\n                            const html: string = await response.text();\r\n                            let parser: DOMParser = new DOMParser();\r\n                            let doc: Document = parser.parseFromString(html, \"text/html\");\r\n                            let d: HTMLUListElement = doc.getElementById(\"post-list-posts\") as HTMLUListElement;\r\n                            Main._images = Main._images.concat(Parser.parse(d));\r\n                            let percent: number = Math.floor(100 * count / urls.length);\r\n                            Main.setLabel(`Parsing pages ${percent.toString()}% done`);\r\n                        } catch (e) {\r\n                            failedPages.push(url);\r\n                        }\r\n                    }\r\n                    if (Main._images.length > 100) {\r\n                        let f: boolean = confirm(`Warning, you are about to mass download ${Main._images.length} images, this can cause issues; your browser running out of memory, or konachan going down as Cloudflare might think this is a DOS attack. \\nThere is no guarantee that all images will be downloaded without error, continue?`);\r\n                        if (!f) {\r\n                            Main.setLabel();\r\n                            idDownloading = false;\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (failedPages.length > 0) {\r\n                        alert(`Failed to download pictures from ${failedPages}`);\r\n                    }\r\n                    let batchLimit: number = 1000;\r\n                    count = 0;\r\n                    let isBatch: boolean = Main._images.length > batchLimit;\r\n                    let batch: FetishImage[] = [];\r\n                    for (let im of Main._images) {\r\n                        if (!im.isInit) {\r\n                            try {\r\n                                count++;\r\n                                await delay(50);\r\n                                await im.loadImage();\r\n                                Main.setLabel(`${count} out of ${Main._images.length} done`);\r\n                                if (isBatch) {\r\n                                    batch.push(im);\r\n                                    if (count % batchLimit === 0) {\r\n                                        let rounded: number = Math.round(count / batchLimit) * batchLimit;\r\n                                        let batchNum: string = rounded.toString()[0];\r\n                                        let of: number = Math.floor(Math.round(Main._images.length / batchLimit) * batchLimit);\r\n                                        let ofStr: string = of.toString()[0];\r\n                                        if (Main._images.length % batchLimit !== 0 && Main._images.length % batchLimit > batchLimit) {\r\n                                            ofStr = String(parseInt(ofStr) + 1);\r\n                                        }\r\n                                        await Main.doDownload(batch, `${batchNum} of ${ofStr}`);\r\n                                        for (let i: number = 0; i < batch.length; i++) {\r\n                                            batch[i].unloadImage();\r\n                                        }\r\n                                        batch = [];\r\n                                    }\r\n                                }\r\n                            } catch (e) {\r\n                                await delay(4000);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (isBatch && batch.length > 0) {\r\n                        // download the rest of the batch\r\n                        Main.doDownload(batch, \"final\");\r\n                        // inti is not true, as batches remove images as they are downloaded\r\n                    } else {\r\n                        Main.doDownload(Main._images);\r\n                        Main._isInit = true;\r\n                    }\r\n                    idDownloading = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nMain.init();","import {FetishImage} from \"FetishImage\";\r\nimport {ImageContainerTyping} from \"Typings\";\r\n\r\nexport class Parser {\r\n    public static parse(postList: HTMLUListElement): FetishImage[] {\r\n        let childrenLi: NodeListOf<HTMLLIElement> = postList.childNodes as NodeListOf<HTMLLIElement>;\r\n        let retArr: FetishImage[] = [];\r\n        for(let i:number = 0; i < childrenLi.length; i++){\r\n            let e:HTMLLIElement = childrenLi[i];\r\n            if (e.nodeType == Node.ELEMENT_NODE) {\r\n                let containerInfo:ImageContainerTyping = Parser._parseContainer(e);\r\n                retArr.push(new FetishImage(containerInfo));\r\n            }\r\n        }\r\n        return retArr;\r\n    }\r\n\r\n    private static _parseContainer(el: HTMLLIElement): ImageContainerTyping {\r\n        let url: string;\r\n        let res: string;\r\n        let title: string;\r\n\r\n        let tagForTitle: HTMLDivElement = el.getElementsByClassName(\"inner\")[0] as HTMLDivElement;\r\n        let aNameTag: HTMLAnchorElement = tagForTitle.firstChild as HTMLAnchorElement;\r\n        let infoTag: HTMLAnchorElement = el.getElementsByClassName(\"directlink\")[0] as HTMLAnchorElement;\r\n\r\n        url = infoTag.href;\r\n        res = infoTag.getElementsByClassName(\"directlink-res\")[0].innerHTML;\r\n        title = `${aNameTag.href.substr(aNameTag.href.lastIndexOf('/') + 1)}.${url.split(\".\").pop()}`;\r\n        return {\r\n            url: url,\r\n            res: res,\r\n            title: title\r\n        };\r\n    }\r\n}","import * as FileSaver from \"file-saver\";\r\n\r\nexport enum HTTP_METHOD {\r\n    GET = \"GET\",\r\n    POST = \"POST\",\r\n    OPTIONS = \"OPTIONS\"\r\n}\r\n\r\nexport let QueryString: { [key: string]: any } = (() => {\r\n    if (typeof window == \"undefined\") {\r\n        return {};\r\n    }\r\n    let query_string: { [key: string]: any } = {};\r\n    let query: string = window.location.search.substring(1);\r\n    let vars: Array<string> = query.split(\"&\");\r\n    for (let i: number = 0; i < vars.length; i++) {\r\n        let pair: Array<string> = vars[i].split(\"=\");\r\n        if (typeof query_string[pair[0]] === \"undefined\") {\r\n            query_string[pair[0]] = pair[1];\r\n        } else if (typeof query_string[pair[0]] === \"string\") {\r\n            query_string[pair[0]] = [query_string[pair[0]], pair[1]];\r\n        } else {\r\n            query_string[pair[0]].push(pair[1]);\r\n        }\r\n    }\r\n    return query_string;\r\n})();\r\n\r\nexport class AjaxUtils {\r\n\r\n    public static addParameter(url: string, parameterName: string, parameterValue: string, atStart: boolean = false): string {\r\n        let replaceDuplicates: boolean = true;\r\n        let urlhash: string;\r\n        let cl: number;\r\n        if (url.indexOf('#') > 0) {\r\n            cl = url.indexOf('#');\r\n            urlhash = url.substring(url.indexOf('#'), url.length);\r\n        } else {\r\n            urlhash = '';\r\n            cl = url.length;\r\n        }\r\n        let sourceUrl: string = url.substring(0, cl);\r\n        let urlParts: string[] = sourceUrl.split(\"?\");\r\n        let newQueryString: string = \"\";\r\n        if (urlParts.length > 1) {\r\n            let parameters: string[] = urlParts[1].split(\"&\");\r\n            for (let i: number = 0; (i < parameters.length); i++) {\r\n                let parameterParts: string[] = parameters[i].split(\"=\");\r\n                if (!(replaceDuplicates && parameterParts[0] == parameterName)) {\r\n                    if (newQueryString == \"\") {\r\n                        newQueryString = \"?\";\r\n                    } else {\r\n                        newQueryString += \"&\";\r\n                    }\r\n                    newQueryString += parameterParts[0] + \"=\" + (parameterParts[1] ? parameterParts[1] : '');\r\n                }\r\n            }\r\n        }\r\n        if (newQueryString == \"\") {\r\n            newQueryString = \"?\";\r\n        }\r\n        if (atStart) {\r\n            newQueryString = '?' + parameterName + \"=\" + parameterValue + (newQueryString.length > 1 ? '&' + newQueryString.substring(1) : '');\r\n        } else {\r\n            if (newQueryString !== \"\" && newQueryString != '?')\r\n                newQueryString += \"&\";\r\n            newQueryString += parameterName + \"=\" + (parameterValue ? parameterValue : '');\r\n        }\r\n        return urlParts[0] + newQueryString + urlhash;\r\n    }\r\n\r\n    public static loadXHR(url: string): Promise<Blob> {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n                xhr.open(\"GET\", url);\r\n                xhr.responseType = \"blob\";\r\n                xhr.onerror = () => {\r\n                    reject(\"Network error.\");\r\n                };\r\n                xhr.onload = () => {\r\n                    if (xhr.status === 200) {\r\n                        resolve(xhr.response);\r\n                    } else {\r\n                        reject(\"Loading error:\" + xhr.statusText);\r\n                    }\r\n                };\r\n                xhr.send();\r\n            } catch (err) {\r\n                reject(err.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    public static downloadViaJavaScript(url: string, data: any, fileName?: string, mediaType?: string, type?: HTTP_METHOD): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            if (!type) {\r\n                type = HTTP_METHOD.POST;\r\n            }\r\n            //  let blob:Blob = await AjaxUtils.makeRequest(type, url, dataMap, null, \"blob\") as Blob;\r\n            let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n            xhr.open(type, url);\r\n            xhr.responseType = \"blob\";\r\n            xhr.withCredentials = true;\r\n            if (type === HTTP_METHOD.POST) {\r\n                xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            }\r\n            let hasError: boolean = false;\r\n            xhr.onreadystatechange = (): void => {\r\n                let error: string = null;\r\n                if (xhr.readyState === XMLHttpRequest.DONE) {\r\n                    if (hasError) {\r\n                        if (xhr.response) {\r\n                            error = xhr.response;\r\n                        } else {\r\n                            error = \"internal server error\";\r\n                        }\r\n                        reject(error);\r\n                    }\r\n                    let fileName: string;\r\n                    let contentDispositionHeader: string = xhr.getResponseHeader(\"Content-Disposition\");\r\n                    if (contentDispositionHeader && contentDispositionHeader.indexOf(\"filename\") > -1) {\r\n                        fileName = contentDispositionHeader.split(\"filename\").pop();\r\n                        fileName = fileName.replace(\"=\", \"\");\r\n                        fileName = fileName.trim();\r\n                        fileName = fileName.replace(/\"/g, \"\");\r\n                    } else {\r\n                        fileName = \"untitled.txt\";\r\n                    }\r\n                    let blob: Blob = xhr.response;\r\n                    FileSaver.saveAs(blob, fileName, true);\r\n                    resolve();\r\n                } else if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\r\n                    if (xhr.status !== 200) {\r\n                        xhr.responseType = \"text\";\r\n                        hasError = true;\r\n                    }\r\n                }\r\n            };\r\n            if (type === \"POST\") {\r\n                xhr.send(JSON.stringify(data));\r\n            } else {\r\n                xhr.send();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport class MathUtil {\r\n    public static range(start: number, end: number): Array<number> {\r\n        // @ts-ignore\r\n        return Array(end - start + 1).fill().map((_, idx) => start + idx);\r\n    }\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_JSZip__;","module.exports = __WEBPACK_EXTERNAL_MODULE_file_saver__;"],"sourceRoot":""}